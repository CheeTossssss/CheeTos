#include<stdio.h> 
#include<stdlib.h> 
  
struct Node 
{ 
    int data; 
    struct Node* next; 
}; 
  

void removeDuplicates(struct Node* head) 
{ 
   
    struct Node* current=head; 
  
    struct Node* nextNext;  
    
    
    if (current==NULL)  
       return;  
  
    
    while(current->next!=NULL)  
    { 
       
       if(current->data==current->next->data)  
       { 
                       
           nextNext=current->next->next; 
           free(current->next); 
           current->next=nextNext;   
       } 
       else 
       { 
          current = current->next;  
       } 
    } 
} 
  

void push(struct Node** head_ref, int newData) 
{ 
   
    struct Node* newNode = 
            (struct Node*) malloc(sizeof(struct Node)); 
              
   
    newNode->data=newData; 
                  
    
    newNode->next=(*head_ref);      
          
    
    (*head_ref)=newNode; 
} 
  

void printList(struct Node *node) 
{ 
    while(node!=NULL){ 
       printf("%d ",node->data); 
       node=node->next; 
    } 
}  
  

int main() 
{ 
    struct Node* head=NULL; 
    push(&head,20); 
    push(&head,13); 
    push(&head,13);   
    push(&head,11); 
    push(&head,11); 
    push(&head,11);                                     
  
    printf("Before: "); 
    printList(head);  
    removeDuplicates(head); 
    puts("");
  
    printf("After: ");          
    printList(head);             
    
    return 0; 
} 
